#include "amici/symbolic_functions.h"
#include "amici/defines.h"
#include "sundials/sundials_types.h"

#include <gsl/gsl-lite.hpp>
#include <array>

#include "SPARCED_k.h"
#include "SPARCED_sigmay.h"

namespace amici {
namespace model_SPARCED {

void sigmay_SPARCED(realtype *sigmay, const realtype t, const realtype *p, const realtype *k){
    sigma_p53 = 1.0;  // sigmay[0]
    sigma_Mdm2 = 1.0;  // sigmay[1]
    sigma_Wip1 = 1.0;  // sigmay[2]
    sigma_BRCA2 = 1.0;  // sigmay[3]
    sigma_MSH6 = 1.0;  // sigmay[4]
    sigma_MGMT = 1.0;  // sigmay[5]
    sigma_ARF = 1.0;  // sigmay[6]
    sigma_MDM4 = 1.0;  // sigmay[7]
    sigma_ATM = 1.0;  // sigmay[8]
    sigma_ATR = 1.0;  // sigmay[9]
    sigma_RB = 1.0;  // sigmay[10]
    sigma_E2F = 1.0;  // sigmay[11]
    sigma_Cd = 1.0;  // sigmay[12]
    sigma_Ce = 1.0;  // sigmay[13]
    sigma_Skp2 = 1.0;  // sigmay[14]
    sigma_Pai = 1.0;  // sigmay[15]
    sigma_Pei = 1.0;  // sigmay[16]
    sigma_Pbi = 1.0;  // sigmay[17]
    sigma_Ca = 1.0;  // sigmay[18]
    sigma_p27 = 1.0;  // sigmay[19]
    sigma_Cdh1a = 1.0;  // sigmay[20]
    sigma_Cb = 1.0;  // sigmay[21]
    sigma_Cdc20 = 1.0;  // sigmay[22]
    sigma_Wee1 = 1.0;  // sigmay[23]
    sigma_Chk1 = 1.0;  // sigmay[24]
    sigma_p21 = 1.0;  // sigmay[25]
    sigma_L = 1.0;  // sigmay[26]
    sigma_R = 1.0;  // sigmay[27]
    sigma_flip = 1.0;  // sigmay[28]
    sigma_C8 = 1.0;  // sigmay[29]
    sigma_Bar = 1.0;  // sigmay[30]
    sigma_C3 = 1.0;  // sigmay[31]
    sigma_C6 = 1.0;  // sigmay[32]
    sigma_XIAP = 1.0;  // sigmay[33]
    sigma_PARP = 1.0;  // sigmay[34]
    sigma_Bid = 1.0;  // sigmay[35]
    sigma_Bcl2 = 1.0;  // sigmay[36]
    sigma_Bax = 1.0;  // sigmay[37]
    sigma_CytoC = 1.0;  // sigmay[38]
    sigma_Smac = 1.0;  // sigmay[39]
    sigma_Apaf = 1.0;  // sigmay[40]
    sigma_C9 = 1.0;  // sigmay[41]
    sigma_BAD = 1.0;  // sigmay[42]
    sigma_PUMA = 1.0;  // sigmay[43]
    sigma_NOXA = 1.0;  // sigmay[44]
    sigma_BIM = 1.0;  // sigmay[45]
    sigma_E = 1.0;  // sigmay[46]
    sigma_H = 1.0;  // sigmay[47]
    sigma_HGF = 1.0;  // sigmay[48]
    sigma_P = 1.0;  // sigmay[49]
    sigma_F = 1.0;  // sigmay[50]
    sigma_I = 1.0;  // sigmay[51]
    sigma_IN = 1.0;  // sigmay[52]
    sigma_E1 = 1.0;  // sigmay[53]
    sigma_E2 = 1.0;  // sigmay[54]
    sigma_E3 = 1.0;  // sigmay[55]
    sigma_E4 = 1.0;  // sigmay[56]
    sigma_Ev3 = 1.0;  // sigmay[57]
    sigma_Met = 1.0;  // sigmay[58]
    sigma_Pr = 1.0;  // sigmay[59]
    sigma_Fr = 1.0;  // sigmay[60]
    sigma_Ir = 1.0;  // sigmay[61]
    sigma_Isr = 1.0;  // sigmay[62]
    sigma_IRS = 1.0;  // sigmay[63]
    sigma_Sp = 1.0;  // sigmay[64]
    sigma_Cbl = 1.0;  // sigmay[65]
    sigma_G2 = 1.0;  // sigmay[66]
    sigma_PLCg = 1.0;  // sigmay[67]
    sigma_PI3KC1 = 1.0;  // sigmay[68]
    sigma_PI3KR1 = 1.0;  // sigmay[69]
    sigma_PI3K2 = 1.0;  // sigmay[70]
    sigma_GRP = 1.0;  // sigmay[71]
    sigma_Ras = 1.0;  // sigmay[72]
    sigma_NF1 = 1.0;  // sigmay[73]
    sigma_CRaf = 1.0;  // sigmay[74]
    sigma_BRaf = 1.0;  // sigmay[75]
    sigma_MEK = 1.0;  // sigmay[76]
    sigma_MKP3 = 1.0;  // sigmay[77]
    sigma_RSK = 1.0;  // sigmay[78]
    sigma_MKP1 = 1.0;  // sigmay[79]
    sigma_Fos = 1.0;  // sigmay[80]
    sigma_Jun = 1.0;  // sigmay[81]
    sigma_Myc = 1.0;  // sigmay[82]
    sigma_bCATENIN = 1.0;  // sigmay[83]
    sigma_PTEN = 1.0;  // sigmay[84]
    sigma_AKT = 1.0;  // sigmay[85]
    sigma_PDK1 = 1.0;  // sigmay[86]
    sigma_Rictor = 1.0;  // sigmay[87]
    sigma_mTOR = 1.0;  // sigmay[88]
    sigma_GSK3b = 1.0;  // sigmay[89]
    sigma_TSC1 = 1.0;  // sigmay[90]
    sigma_TSC2 = 1.0;  // sigmay[91]
    sigma_PKC = 1.0;  // sigmay[92]
    sigma_RKIP = 1.0;  // sigmay[93]
    sigma_ERK = 1.0;  // sigmay[94]
    sigma_FOXO = 1.0;  // sigmay[95]
    sigma_Rheb = 1.0;  // sigmay[96]
    sigma_Raptor = 1.0;  // sigmay[97]
    sigma_S6K = 1.0;  // sigmay[98]
    sigma_EIF4EBP1 = 1.0;  // sigmay[99]
    sigma_SOS = 1.0;  // sigmay[100]
    sigma_EIF4E = 1.0;  // sigmay[101]
}

} // namespace model_SPARCED
} // namespace amici
